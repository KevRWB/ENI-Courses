Cours boucles

Pour var <- ini à fin [par pas]
 

Algo testBouclePour
	Variable i : entier
	Variable nbMax : entier
Début
	nbMax <- saisir("nombre max ?")
	
	Pour i <- 0 à 10 par 1
		écrire(i)
	FPour

Fin

---------------------------------------------------
Algo moyenneNote
#algo calculant le moyenne des valeurs rentrés par l'utilisateur

	Variable nbValeurs,i : entier
	Variable valeurSaisie, moyenne: réel
	Variable totalValeurs : réel <- 0

Début
	#permettre la saisie d'un nombre de valeurs à saisir ensuite
	nbValeurs <- saisir("Entrez le nombre de valeurs : ")
	
	
	Pour i <- 1 à nbValeurs par 1
	
		#en fonction du nombre de valeurs rentrés, permettre la saisie des valeurs en question
		valeurSaisie <- saisir("Valeur:")
		
		#ajouter la valeur saisie dans la variable du total des valeurs
		totalValeurs += valeurCalcul
		
	FPour
	
	#mettre à jour la moyenne des valeurs en fonction de la variable itérative i
	moyenne <- additionValeurs / nbValeurs
	
	#afficher le résultat
	écrire("La moyenne est de " moyenne)
	
Fin
 ----------------------------------------------------------- 
 Algo moyenneNotes2
	
	Variable note, moyenne : réel
	Variable nombreNotes, i : entier
	Variable moyenne : réel <- 0

	
 Début
	#permettre la saisie des notes par l'utilisateur
	nombreNotes <- saisir("Entrez le nombre de notes ?")
	
	#boucle de saisie de chaque note dont la somme sera sommeNotes
	#Le nombre d'itérations dépends du nombre de notes saisies précédemment par l'utilisateur
	Pour i <- 1 à nombreNotes par 1
		#permettre la saisie des notes par l'utilisateur
		note <- saisir("Votre note ?")
		#ajouter la valeur de la note à la somme des notes
		sommeNotes <- sommeNotes + note
	FPour
	#calcul de la moyenne des notes
	moyenne <- sommeNotes / nombreNotes
	
	#Affichage du résultat
	écrire("La moyenne des notes est " & moyenne)
 Fin
 
 -----------------------------------------------
 
Algo tantQue
	Vaiable saisie : texte
Début
	#Amorçage
	saisie <- saisir("Quelle est la capitale de la France ?")
	
	TantQue saisie != "Paris"
		#Traitement
		écire("C'est faux")
		#Relance
		saisie <- saisir("réessayez ?")
	FTq
	écrire("Bravo, c'est la bonne réponse")

Fin

---------------------------------------------------

Algo couleur
	
	Variable couleur : texte
	Constante COULEUR : texte <- "Blanc"
	
Début
	couleur <- saisir("Quelle est la couleur de la neige ? ")
	
	#tant que la saisie utilisateur est différente de COULEUR, on relance l'utilisateur à donner une nouvelle réponse
	TantQue couleur != COULEUR # condition
		
		#instruction
		écrire("C'est faux")
		
		#relance
		couleur <- saisir("Réessayez ? Quelle est la couleur de la neige")
	
	FTq
	
	écrire("bravo, c'est la bonne réponse")


Fin

--------------------------------------------
Algo moyenneDeNoteV2

	Variable note, moyenne, pourcNotesSupPalier : réel
	Variable sommeNotes, nombreNotes, nbNotesSupPalier : entier <- 0

	Constante STOP : entier <- -1
	Constante PALIER : entier <- 10

Début
	#permettre la saisie de la note par l'utilisateur
	note <- saisir("Note(-1 pour terminer) ?")
	
	TantQue note != STOP 
	
		#Si la note entrée est supérieur au palier défini, incrémenter le compte du nombre de notes
		Si note > PALIER
			nbNotesSupPalier ++
		FSi
		
		#ajout de la valeur de la note saisie à la somme des notes
		sommeNotes <- sommeNotes + note
		
		#incrément du nombre de notes
		nombreNotes ++
		
		#relance de la saisie de note pas l'utilisateur
		note <- saisir("Note(-1 pour terminer) ?")
		
	FTq
	
	Si nbNOtes > 0 Alors
	
		moyenne <- sommesNote / nombreNotes
		
		pourcNotesSupPalier <- nbNotesSupPalier * 100 / nombreNotes
				
		écrire("La moyenne des notes est de " & moyenne)
		
		écrire("Il y a " & pourcNotesSupPalier & "% des notes au-dessus de la moyenne")
		
	FSi
Fin

------------------------------------------------------
Algo guessNumber

	Variable nbUser : entier
	
	Constante NB_CIBLE : entier <- aléa(1,100) #initialisation aléatoire

Début
	#permettre la saisie d'un nombre par l'utilisateur
	nbUser <- saisir("A quel nombre entre 1 et 100 je pense ?")
	
	#Tant que le nombre saisi par l'utilisateur est différent du nombre cible -> Affichage "C'est plus" ou "C'est moins" -> Relance
	TantQue nbUser != NOMBRE_CIBLE
		
		#Si nombre utilisateur inférieur à nombre cible -> afficher " C'est plus !"
		Si nbUser < NOMBRE_CIBLE Alors
			écrire("C'est plus !")
		Sinon
			#Sinon, nombre utilisateur supérieur à nombre cible -> afficher " C'est moins !"
			écrire("C'est moins ! ")
		FSi
		
		#Relance de saisie utilisateur
		nbUser <- saisir("A quel nombre entre 1 et 100 je pense ?")
	FTq
	
	#Affichage du résultat "Bravo..."
	écrire("Bravo, vous avez trouvé" ! )

Fin

-----------------------------------------------
#TD "Que fait cet algorithme" 1 - Piège
#erreurs :	
#	-Boucle infinie -> Pas d'incrémentation de nbTentatives
#	-relance ("revoyez votre géographie") à l'extérieur de la boucle

Algo Piege

	Variable saisi : texte
	Variable tentativesLeft : réel <- 5 
	
	Constante VILLE_CIBLE : texte
	
Début

	#------permettre la saisie d'une réponse par l'utilisateur
	saisie <- saisir("Quelles est la capitale de la France ?")
	
	#------Tant que la saisie utilisateur est différentre de 
	TantQue saisie != VILLE_CIBLE et tentativesLeft != 0
		
		écrire ("Mauvaise réponse ! ")
		#-----décrémenter le nombre de tentatives restantes
		tentativesLeft --
		écrire("Plus que " &  tentativesLeft & "tentative(s)")
		#-----relance de la saisie de la réponse utilisateur
		saisie <- saisir("Quelles est la capitale de la France ?")
		
	FTq
	
	#-------Affichage des résultats
	#-----Si sortie de la boucle graçe à une bonne réponse -> Afficher "Bravo"
	Si tentativesLeft != 0 Alors
		écrire("Bravo")
	Sinon
		#-------Si sortie de la boucle à cause d'un nombre de tentatives trop élevé -> Afficher "Message"
		écrire("Revoyez votre géographie !")
	FSi

Fin

---------------------------------------------
	

